generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String      @id @default(cuid())
  email         String      @unique
  password      String
  tokens        Token[]
  categories    Category[]
  subcategories Subcategory[]
  timeLogs      TimeLog[]
  createdAt     DateTime    @default(now()) @db.Timestamptz(3)
  updatedAt     DateTime    @updatedAt @db.Timestamptz(3)
}

model Token {
  id            String      @id @default(cuid())
  user          User        @relation(fields: [userId], references: [id])
  userId        String
  deviceName    String?
  createdAt     DateTime    @default(now()) @db.Timestamptz(3)
  expiresAt     DateTime?   @db.Timestamptz(3)
  updatedAt     DateTime    @updatedAt @db.Timestamptz(3)
}

model Category {
  id            String      @id @default(cuid())
  name          String
  subcategories Subcategory[]
  user          User        @relation(fields: [userId], references: [id])
  userId        String
  active        Boolean     @default(false)
  visible       Boolean     @default(true)
  timeLogs      TimeLog[]
  createdAt     DateTime    @default(now()) @db.Timestamptz(3)
  updatedAt     DateTime    @updatedAt @db.Timestamptz(3)
}

model Subcategory {
  id            String      @id @default(cuid())
  name          String
  user          User        @relation(fields: [userId], references: [id])
  userId        String
  category      Category    @relation(fields: [categoryId], references: [id])
  categoryId    String
  active        Boolean     @default(false)
  visible       Boolean     @default(true)
  timeLogs      TimeLog[]
  createdAt     DateTime    @default(now()) @db.Timestamptz(3)
  updatedAt     DateTime    @updatedAt @db.Timestamptz(3)
}

model TimeLog {
  id            String      @id @default(cuid())
  user          User        @relation(fields: [userId], references: [id])
  userId        String
  comment       Comment?
  category      Category    @relation(fields: [categoryId], references: [id])
  categoryId    String
  subcategory   Subcategory @relation(fields: [subcategoryId], references: [id])
  subcategoryId String
  createdAt     DateTime    @default(now()) @db.Timestamptz(3)
  updatedAt     DateTime    @updatedAt @db.Timestamptz(3)
  endedAt       DateTime?   @updatedAt @db.Timestamptz(3)
}

model Comment {
  id            String      @id @default(cuid())
  comment       String
  timeLog       TimeLog     @relation(fields: [timeLogId], references: [id])
  timeLogId     String      @unique
  createdAt     DateTime    @default(now()) @db.Timestamptz(3)
  updatedAt     DateTime    @updatedAt @db.Timestamptz(3)
}
